// <auto-generated />
using System;
using AmadeusG3_Neo_Tech_BackEnd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AmadeusG3_Neo_Tech_BackEnd.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250304211244_seEliminaAtributoCity")]
    partial class seEliminaAtributoCity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AmadeusG3_Neo_Tech_BackEnd.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Age")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destiny")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Housing")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RegistDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TravelTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<string>("Weather")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("AmadeusG3_Neo_Tech_BackEnd.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ComidaTipica")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Continente")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DescripcionHotel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Idioma")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Img")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImgHotel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LugarImperdible")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreDestino")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreHotel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UrlHotel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("AmadeusG3_Neo_Tech_BackEnd.Models.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnswerId")
                        .HasColumnType("integer");

                    b.Property<string>("CityAmerica")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CityEurope")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("AmadeusG3_Neo_Tech_BackEnd.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AmadeusG3_Neo_Tech_BackEnd.Models.Answer", b =>
                {
                    b.HasOne("AmadeusG3_Neo_Tech_BackEnd.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AmadeusG3_Neo_Tech_BackEnd.Models.Result", b =>
                {
                    b.HasOne("AmadeusG3_Neo_Tech_BackEnd.Models.Answer", "Answer")
                        .WithMany()
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");
                });
#pragma warning restore 612, 618
        }
    }
}
